package inner;
/*
 * 3. 중첩 클래스 선언
 * 
 * 중첩클래스(Inner Class)?
 * 1. 클래스 내부에 또 다른 클래스 선언.
 * 		==> 두 클래스가 서로 긴밀한 관계로 연결되어 있는 경우에 사용된다.
 * 			두 클래스 멤버 간에 서로 쉽게 접근 할 수 있다는 장점이 있다.
 * 2. 내부 클래스를 하나의 멤버로 사용 할 수 있다.
 * 3. 클래스 멤버 : 멤버변수, 멤버메서드, 외부클래스, 내부클래스
 * 4. 내부 클래스 객체 생성 방법
 * 		형식) 
 * 			외부클래스명.내부클래스명 참조변수 = 외부클래스참조변수.new 내부클래스 생성자();
 * 
 * [내부 클래스의 특징]
 * - 내부 클래스는 외부 클래스의 멤버를 마치 자기 자신처럼 사용이 가능하다.
 * 		==> 데이터 값을 변경시킬 수 있다.
 * 		==> 외부 클래스 멤버의 접근지정자가 private 접근지정자 일지라도 접근이 가능하다.
 * - 내부클래스의 접근을 반드시 외부 클래스를 통하여 접근해야 한다.
 */

class Outer{			//외부클래스

	int su1 = 50;
	private int su2 = 33;
	
	class Inner{		//내부클래스 
		
		void output() {
			su1 = 137;
			su2 = 100;			//외부 private 멤버변수도 자기 클래스것마냥 수정이 가능 
			
			System.out.println("su1 >>> "+ su1);
		}
		
	}
}
public class Ex02 {
	public static void main(String[] args) {
		
		//중첩 클래스 객체 생성 방법
		// 1. 외부 클래스 객체가 우선적으로 생성이 되어있어야 한다.
		Outer out = new Outer();
		
		// 2. 중첩 클래스 객체 생성  : 외부클래스명.내부클래스명 참조변수 = 외부클래스참조변수명.new 내부클래스명();
		Outer.Inner in = out.new Inner();
		
		in.output();
	}

}